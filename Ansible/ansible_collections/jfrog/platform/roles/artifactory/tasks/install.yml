---
- name: Include tasks to configure prerequisites 
  ansible.builtin.include_tasks: 'shared/prerequisites.yml'

- name: Install NGINX
  ansible.builtin.include_role:
    name: artifactory_nginx
  when: artifactory_nginx_installed | bool

- name: Include tasks to download and extract artifactory archive
  ansible.builtin.include_tasks: 'shared/get_archive.yml'

- name: Install Artifactory
  become: true
  block:

    - name: Check if app directory exists
      ansible.builtin.stat:
        path: "{{ artifactory_home }}/app"
      register: app_dir_check

    - name: Copy untar directory to artifactory home
      ansible.builtin.copy:
        src: "{{ artifactory_untar_home }}/"
        dest: "{{ artifactory_home }}"
        owner: "{{ artifactory_user }}"
        group: "{{ artifactory_group }}"
        mode: '0755'
        remote_src: true
      when: not app_dir_check.stat.exists

- name: Include tasks to apply artifactory templates
  ansible.builtin.include_tasks: 'shared/templates.yml'

- name: Include tasks to configure master key
  ansible.builtin.include_tasks: 'shared/master_key.yml'

- name: Include tasks to configure JDBC driver
  ansible.builtin.include_tasks: 'shared/jdbc_driver.yml'

- name: Include tasks to apply and restore SELinux contexts on RHEL based systems
  ansible.builtin.include_tasks: 'shared/selinux.yml'
  when: ansible_facts['os_family'] | lower == 'redhat'

- name: Include tasks to install artifactory service
  ansible.builtin.include_tasks: 'shared/install_service.yml'

- name: Include tasks to fix files ownership
  ansible.builtin.include_tasks: 'shared/permissions.yml'

- name: Restart artifactory service
  ansible.builtin.meta: flush_handlers

- name: Ensure artifactory service is started and enabled
  become: true
  ansible.builtin.systemd_service:
    name: "{{ artifactory_daemon }}"
    state: started
    enabled: true

- name: Include tasks to ensure artifactory is up and running
  ansible.builtin.include_tasks: 'shared/upcheck.yml'
