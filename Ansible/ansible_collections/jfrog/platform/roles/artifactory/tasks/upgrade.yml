---
- name: Include tasks to configure prerequisites
  ansible.builtin.include_tasks: 'shared/prerequisites.yml'

- name: Include tasks to apply and restore SELinux contexts on RHEL based systems
  ansible.builtin.include_tasks: 'shared/selinux.yml'
  when: ansible_facts['os_family'] | lower == 'redhat'

- name: Include tasks to download and extract artifactory archive
  ansible.builtin.include_tasks: 'shared/get_archive.yml'

- name: Upgrade Artifactory
  become: true
  block:

    - name: Ensure artifactory is stopped
      ansible.builtin.systemd_service:
        name: "{{ artifactory_os_daemon }}"
        state: stopped
      when: unarchived_artifactory is changed

    - name: Check artifactory version
      ansible.builtin.fetch:
        src: "{{ artifactory_application_dir }}/app/artifactory.product.version.properties"
        dest: "/tmp/artifactory.product.version.properties"
        flat: true
      changed_when: false

    - name: Set running_version
      ansible.builtin.set_fact:
        running_version: >-
          "{{ lookup('ansible.builtin.ini',
                    'artifactory.product.version',
                    type='properties',
                    file='/tmp/artifactory.product.version.properties') }}"

    - name: Delete old artifactory app directory
      ansible.builtin.file:
        path: "{{ artifactory_application_dir }}/app"
        state: absent
      when: running_version != artifactory_version

    - name: Copy new artifactory app directory
      ansible.builtin.command: "cp -r {{ artifactory_untar_dir }}/app/. {{ artifactory_application_dir }}/app"
      notify: Restart artifactory
      when: running_version != artifactory_version

- name: Include tasks to apply artifactory templates
  ansible.builtin.include_tasks: 'shared/templates.yml'

- name: Include tasks to configure JDBC driver
  ansible.builtin.include_tasks: 'shared/jdbc_driver.yml'

- name: Include tasks to install artifactory service
  ansible.builtin.include_tasks: 'shared/install_service.yml'

- name: Include tasks to apply and restore SELinux contexts on RHEL based systems
  ansible.builtin.include_tasks: 'shared/selinux.yml'
  when: ansible_facts['os_family'] | lower == 'redhat'

- name: Include tasks to fix files ownership
  ansible.builtin.include_tasks: 'shared/permissions.yml'

- name: Restart artifactory
  ansible.builtin.meta: flush_handlers

- name: Ensure artifactory service is started and enabled
  become: true
  ansible.builtin.systemd_service:
    name: "{{ artifactory_os_daemon }}"
    state: started
    enabled: true

- name: Include tasks to ensure artifactory is up and running
  ansible.builtin.include_tasks: 'shared/upcheck.yml'
