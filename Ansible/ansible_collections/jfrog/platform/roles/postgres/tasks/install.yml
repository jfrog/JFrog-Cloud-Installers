- name: Assert database username and password are defined
  ansible.builtin.assert:
    that:
      - curr_user.username is defined
      - curr_user.password is defined
  loop: "{{ database | dict2items | map(attribute='value') | list }}"
  loop_control:
    loop_var: curr_user
  when: curr_user.enabled | bool
  no_log: true  # secret passwords

- name: Define OS-specific variables
  ansible.builtin.include_vars: "{{ ansible_os_family }}.yml"

- name: Install prerequisite packages
  ansible.builtin.include_tasks: "{{ ansible_os_family }}.yml"

- name: Set PostgreSQL environment variables
  become: true
  ansible.builtin.template:
    src: postgres.sh.j2
    dest: /etc/profile.d/postgres.sh
    mode: 0644
  notify: Restart postgresql

- name: Ensure PostgreSQL data directory exists
  become: true
  ansible.builtin.file:
    path: "{{ postgresql_data_dir }}"
    owner: postgres
    group: postgres
    state: directory
    mode: 0700

- name: Initialize PostgreSQL database cluster
  become: true
  become_user: postgres
  ansible.builtin.command: "{{ postgresql_bin_path }}/initdb -D {{ postgresql_data_dir }}"
  args:
    creates: "{{ postgresql_data_dir }}/PG_VERSION"
  environment:
    LC_ALL: "{{ postgres_locale }}"

- name: Check FIPS status
  ansible.builtin.command: cat /proc/sys/crypto/fips_enabled
  register: _fips_enabled
  ignore_errors: true
  changed_when: false

- name: Setup postgres configuration files
  become: true
  become_user: postgres
  ansible.builtin.template:
    src: "{{ item }}.j2"
    dest: "{{ postgresql_config_path }}/{{ item }}"
    owner: postgres
    group: postgres
    mode: 0644
  loop:
    - pg_hba.conf
    - postgresql.conf
  notify: Restart postgresql

- name: Setup postgres systemd overide directory
  become: true
  ansible.builtin.file:
    path: "/etc/systemd/system/postgresql-{{ postgres_version }}.service.d"
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Setup postgres systemd overides
  become: true
  ansible.builtin.template:
    src: override.conf.j2
    dest: "/etc/systemd/system/postgresql-{{ postgres_version }}.service.d/override.conf"
    owner: root
    group: root
    mode: 0644

- name: Ensure PostgreSQL is started and enabled on boot
  become: true
  ansible.builtin.systemd:
    name: "{{ postgresql_daemon }}"
    state: started
    enabled: true

- name: Hold until Postgresql is up and running
  ansible.builtin.wait_for:
    port: "{{ postgres_port }}"
    timeout: 120
    sleep: 10

- name: Create user
  become: true
  become_user: postgres
  community.postgresql.postgresql_user:
    name: "{{ curr_user.username }}"
    password: "{{ curr_user.password }}"
    conn_limit: "-1"
  loop: "{{ database | dict2items | map(attribute='value') | list }}"
  loop_control:
    loop_var: curr_user
  when: curr_user.enabled | bool
  no_log: true  # secret passwords

- name: Create database
  become: true
  become_user: postgres
  community.postgresql.postgresql_db:
    name: "{{ curr_db.name }}"
    owner: "{{ curr_db.owner }}"
    encoding: UTF-8
    lc_collate: "{{ postgres_locale }}"
    lc_ctype: "{{ postgres_locale }}"
    template: template0
  loop: "{{ database | dict2items | map(attribute='value') | list }}"
  loop_control:
    loop_var: curr_db
  when: curr_db.enabled | bool
  no_log: true  # secret passwords

- name: Grant privs on db
  become: true
  become_user: postgres
  community.postgresql.postgresql_privs:
    database: "{{ curr_db.name }}"
    role: "{{ curr_db.owner }}"
    state: present
    privs: ALL
    type: database
  loop: "{{ database | dict2items | map(attribute='value') | list }}"
  loop_control:
    loop_var: curr_db
  when: curr_db.enabled | bool
  no_log: true  # secret passwords
